#In this project I downloaded Spotify data from Kaggle.
#I created a table to insert the Spotify data into.
#Then I used SQL to analyze the information;

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#I answered a couple questions I had about the data below.

#This query gave me the answer of what songs were by Olivia Rodrigo and I organized them from most popular to least popular:
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo'
ORDER BY popularity desc;

#This query displays information on the top 10 songs with the highest energy levels:
SELECT track_name, energy
FROM BIT_DB.Spotifydata
ORDER BY energy desc
LIMIT 10;

#I wrote this query to determine which was the longest song in the database:
SELECT MAX(duration_ms),
track_name
FROM BIT_DB.Spotifydata;

#This query displays songs with a popularity of over 85:
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity>85;

#Finally this query shows the average danceability of Bad Bunny's songs:
SELECT artist_name, track_name,
AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE artist_name='Bad Bunny'
GROUP BY track_name, artist_name;
